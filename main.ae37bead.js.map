{"version":3,"sources":["scripts/main.js"],"names":["cells","button","document","querySelector","gameField","scoreElement","loseMessage","winMessage","isCellsMoved","score","initGameField","keydownListener","ev","moveCells","key","fillEmptyCell","checkNextMovePossibility","classList","toggle","updateHtmlGameField","tbody","createElement","i","tr","add","j","td","textContent","appendChild","replaceChild","firstElementChild","push","getEmptyCells","length","mergeUp","mergeLeft","mergeDown","mergeRight","merge","i0","j0","i1","j1","nextNum","toString","force","isMerged","c","r","moveCellsUp","moveCellsDown","moveCellsRight","moveCellsLeft","subC","swapCells","subR","a","emptyCells","cell","getRandomNumberInRangeInclude","row","get2Or4","twosAndFour","min","max","Math","round","random","addEventListener","contains","removeEventListener"],"mappings":"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","file":"main.ae37bead.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst gameField = document.querySelector('.game-field');\nconst scoreElement = document.querySelector('.game-score');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nlet cells;\nlet isCellsMoved = false;\nlet score = 0;\n\ninitGameField();\n\nconst keydownListener = (ev) => {\n  moveCells(ev.key);\n\n  if (isCellsMoved) {\n    fillEmptyCell();\n\n    isCellsMoved = false;\n  } else {\n    if (!checkNextMovePossibility()) {\n      loseMessage.classList.toggle('hidden', false);\n    }\n  }\n\n  updateHtmlGameField();\n};\n\nbutton.addEventListener('click', () => {\n  button.classList.toggle('start');\n  button.classList.toggle('restart');\n\n  if (button.classList.contains('start')) {\n    button.textContent = 'Start';\n\n    initGameField();\n\n    score = 0;\n    scoreElement.textContent = '0';\n\n    document.removeEventListener('keydown', keydownListener);\n  } else {\n    button.textContent = 'Restart';\n\n    fillEmptyCell();\n    fillEmptyCell();\n\n    document.addEventListener('keydown', keydownListener);\n  }\n\n  updateHtmlGameField();\n\n  document.querySelector('.message-start')\n    .classList.toggle('hidden');\n  loseMessage.classList.toggle('hidden', true);\n  winMessage.classList.toggle('hidden', true);\n});\n\nfunction updateHtmlGameField() {\n  const tbody = document.createElement('tbody');\n\n  for (let i = 0; i < 4; i++) {\n    const tr = document.createElement('tr');\n\n    tr.classList.add('field-row');\n\n    for (let j = 0; j < 4; j++) {\n      const td = document.createElement('td');\n\n      td.classList.add('field-cell');\n      td.textContent = cells[i][j];\n\n      if (cells[i][j]) {\n        td.classList.add('field-cell--' + cells[i][j]);\n      }\n\n      tr.appendChild(td);\n    }\n\n    tbody.appendChild(tr);\n  }\n\n  gameField.replaceChild(tbody, gameField.firstElementChild);\n}\n\nfunction initGameField() {\n  cells = [];\n\n  for (let i = 0; i < 4; i++) {\n    cells.push([]);\n\n    for (let j = 0; j < 4; j++) {\n      cells[i][j] = '';\n    }\n  }\n}\n\nfunction checkNextMovePossibility() {\n  return (getEmptyCells().length !== 0)\n    || mergeUp()\n    || mergeLeft()\n    || mergeDown()\n    || mergeRight();\n}\n\nfunction merge(i0, j0, i1, j1) {\n  const nextNum = +cells[i0][j0] * 2;\n\n  score += nextNum;\n  scoreElement.textContent = score.toString();\n\n  cells[i0][j0] = nextNum;\n  cells[i1][j1] = '';\n\n  if (nextNum === 2048) {\n    winMessage.classList.toggle('hidden', false);\n  }\n\n  isCellsMoved = true;\n}\n\nfunction mergeUp(force) {\n  let isMerged = false;\n\n  for (let c = 0; c < cells[0].length; c++) {\n    for (let r = 0; r < cells.length - 1; r++) {\n      if (cells[r][c] === cells[r + 1][c]\n        && cells[r][c] !== '') {\n        if (force) {\n          merge(r, c, r + 1, c);\n        }\n\n        isMerged = true;\n      }\n    }\n  }\n\n  return isMerged;\n}\n\nfunction mergeDown(force) {\n  let isMerged = false;\n\n  for (let c = 0; c < cells[0].length; c++) {\n    for (let r = cells.length - 1; r > 0; r--) {\n      if (cells[r][c] === cells[r - 1][c]\n        && cells[r][c] !== '') {\n        if (force) {\n          merge(r, c, r - 1, c);\n        }\n\n        isMerged = true;\n      }\n    }\n  }\n\n  return isMerged;\n}\n\nfunction mergeLeft(force) {\n  let isMerged = false;\n\n  for (let r = 0; r < cells.length; r++) {\n    for (let c = 0; c < cells[r].length - 1; c++) {\n      if (cells[r][c] === cells[r][c + 1]\n        && cells[r][c] !== '') {\n        if (force) {\n          merge(r, c, r, c + 1);\n        }\n\n        isMerged = true;\n      }\n    }\n  }\n\n  return isMerged;\n}\n\nfunction mergeRight(force) {\n  let isMerged = false;\n\n  for (let r = 0; r < cells.length; r++) {\n    for (let c = cells[r].length - 1; c > 0; c--) {\n      if (cells[r][c] === cells[r][c - 1]\n        && cells[r][c] !== '') {\n        if (force) {\n          merge(r, c, r, c - 1);\n        }\n\n        isMerged = true;\n      }\n    }\n  }\n\n  return isMerged;\n}\n\nfunction moveCells(key) {\n  switch (key) {\n    case 'ArrowUp': {\n      moveCellsUp();\n      mergeUp(true);\n      moveCellsUp();\n\n      break;\n    }\n\n    case 'ArrowDown': {\n      moveCellsDown();\n      mergeDown(true);\n      moveCellsDown();\n\n      break;\n    }\n\n    case 'ArrowRight': {\n      moveCellsRight();\n      mergeRight(true);\n      moveCellsRight();\n\n      break;\n    }\n\n    case 'ArrowLeft': {\n      moveCellsLeft();\n      mergeLeft(true);\n      moveCellsLeft();\n\n      break;\n    }\n  }\n}\n\nfunction moveCellsLeft() {\n  for (let c = 1; c < cells[0].length; c++) {\n    for (let r = 0; r < cells.length; r++) {\n      if (cells[r][c] !== '') {\n        for (let subC = 0; subC < c; subC++) {\n          if (cells[r][subC] === '') {\n            swapCells(r, c, r, subC);\n\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction moveCellsRight() {\n  for (let c = cells[0].length - 2; c >= 0; c--) {\n    for (let r = 0; r < cells.length; r++) {\n      if (cells[r][c] !== '') {\n        for (let subC = cells[r].length - 1; subC > c; subC--) {\n          if (cells[r][subC] === '') {\n            swapCells(r, c, r, subC);\n\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction moveCellsUp() {\n  for (let r = 1; r < cells.length; r++) {\n    for (let c = 0; c < cells[r].length; c++) {\n      if (cells[r][c] !== '') {\n        for (let subR = 0; subR < r; subR++) {\n          if (cells[subR][c] === '') {\n            swapCells(r, c, subR, c);\n\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction moveCellsDown() {\n  for (let r = cells.length - 2; r >= 0; r--) {\n    for (let c = 0; c < cells[r].length; c++) {\n      if (cells[r][c] !== '') {\n        for (let subR = cells.length - 1; subR > r; subR--) {\n          if (cells[subR][c] === '') {\n            swapCells(r, c, subR, c);\n\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction swapCells(i0, j0, i1, j1) {\n  const a = cells[i0][j0];\n\n  cells[i0][j0] = cells[i1][j1];\n  cells[i1][j1] = a;\n\n  isCellsMoved = true;\n}\n\nfunction fillEmptyCell() {\n  const emptyCells = getEmptyCells();\n  const numOfCell = getRandomNumberInRangeInclude(0, emptyCells.length - 1);\n  const cell = emptyCells[numOfCell];\n\n  cells[cell.row][cell.cell] = get2Or4();\n}\n\nfunction get2Or4() {\n  const twosAndFour = [4, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n\n  return twosAndFour[getRandomNumberInRangeInclude(0, 9)];\n}\n\nfunction getEmptyCells() {\n  const emptyCells = [];\n\n  for (let i = 0; i < cells.length; i++) {\n    for (let j = 0; j < cells[i].length; j++) {\n      if (cells[i][j] === '') {\n        emptyCells.push({\n          row: i,\n          cell: j,\n        });\n      }\n    }\n  }\n\n  return emptyCells;\n}\n\nfunction getRandomNumberInRangeInclude(min, max) {\n  return min + Math.round(max * Math.random());\n}\n"]}